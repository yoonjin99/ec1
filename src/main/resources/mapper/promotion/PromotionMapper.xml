<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 줄맞추기 -->
<mapper namespace="com.plateer.ec1.promotion.mapper.PromotionMapper">
    <!-- 다운로드 가능한 쿠폰 확인 -->
    <select id="selectAvailableCoupon" resultType="com.plateer.ec1.promotion.vo.CouponVo" parameterType="com.plateer.ec1.promotion.vo.CouponRequestVo">
      select
        cpb.prm_no
        , cpb.prm_nm
        , ccb.dwl_psb_cnt
        , ccb.psn_dwl_psb_cnt
        , (select count(prm_no) from cc_cpn_issue where prm_no = #{prmNo}) as tot_cnt
        , (select count(prm_no) from cc_cpn_issue where prm_no = #{prmNo} and mbr_no = #{mbrNo}) as mbr_cnt
        , (case when cpb.prm_priod_ccd = '10' then cpb.prm_strt_dt
             else cpb.sys_mod_dtime
           end) as prm_strt_dt
        , (case when cpb.prm_priod_ccd = '10' then cpb.prm_end_dt
                else cpb.sys_mod_dtime::date + cpb.prm_std_dd
            end) as prm_end_dt
      from
        cc_prm_base cpb
        inner join cc_cpn_base ccb
        on cpb.prm_no = ccb.prm_no
      where
        cpb.use_yn = 'Y'
        and cpb.prm_no = #{prmNo}
        and now() between ccb.dwl_avl_strt_dd::date and ccb.dwl_avl_end_dd::date + 1
    </select>

    <!-- 다운로드 받은 쿠폰 목록 -->
    <select id="selectDownloadCouponList" parameterType="string" resultType="com.plateer.ec1.promotion.vo.PromotionVo">
        select
            /* PromotionMapper.selectDownloadCouponList */
            cpb.prm_no,
            cpb.prm_nm,
            cci.cpn_iss_no
        from
            cc_prm_base cpb
            inner join cc_cpn_issue cci
            on cpb.prm_no = cci.prm_no
            and cci.mbr_no = #{mbrNo}
    </select>

    <!-- 복원 가능한 쿠폰인지 확인 -->
    <select id="selectAvailableRestoreCoupon" parameterType="com.plateer.ec1.promotion.vo.CouponRequestVo" resultType="com.plateer.ec1.promotion.vo.CouponVo">
        select *
        from
             (  select
                /* PromotionMapper.selectAvailableRestoreCoupon */
                  cci.prm_no
                  , cci.cpn_iss_no as org_cpn_iss_no
                  , (case when cpb.prm_priod_ccd = '10' then cpb.prm_strt_dt
                             else cpb.sys_mod_dtime
                    end) as prm_strt_dt
                  , (case when cpb.prm_priod_ccd = '10' then cpb.prm_end_dt
                             else cpb.sys_mod_dtime::date + cpb.prm_std_dd
                    end) as prm_end_dt
                from
                  cc_cpn_issue cci
                  inner join cc_prm_base cpb
                  on cci.prm_no = cpb.prm_no
                where
                  cci.prm_no = #{prmNo}
                  and cci.cpn_iss_no = #{cpnIssNo}
            ) t
        where now() between t.prm_strt_dt::date and t.prm_end_dt::date + 1
    </select>

    <resultMap id="resultMap" type="com.plateer.ec1.promotion.vo.ProductCouponsVo" >
      <id column="goods_no"/>
      <id column="item_no"/>
      <association property="productVo" autoMapping="true">
        <result column="goods_no" property="goodsNo"/>
        <result column="item_no" property="itemNo"/>
        <result column="prd_prm_no" property="prmNo"/>
        <result column="prd_cpn_iss_no" property="cpnIssNo"/>
      </association>
      <collection property="promotionVoList" ofType="com.plateer.ec1.promotion.vo.PromotionVo" autoMapping="true"/>
    </resultMap>

    <select id="selectProductCoupon" resultMap="resultMap" parameterType="com.plateer.ec1.promotion.vo.PromotionRequestVo">
      select
        t.prm_no
        , t.prm_nm
        , t.dc_val
        , t.min_pur_amt
        , t.max_dc_amt
        , t.dc_ccd
        , t.cpn_kind_cd
        , t.cpn_iss_no
        , t.goods_no
        , t.item_no
        , t.prd_price
      from
        (select
          /* PromotionMapper.selectAvailablePromtionList */
          cpb.prm_no
          , cpb.prm_nm
          , cpb.dc_val
          , cpb.min_pur_amt
          , cpb.max_dc_amt
          , cpb.dc_ccd
          , ccb.cpn_kind_cd
          , cci.cpn_iss_no
          , pgb.goods_no
          , pii.item_no
          , COALESCE(pgb.prm_prc, pgb.sale_prc) as prd_price
          , (case when cpb.prm_priod_ccd = '10' then cpb.prm_strt_dt
          else cpb.sys_mod_dtime
          end) as prm_strt_dt
          , (case when cpb.prm_priod_ccd = '10' then cpb.prm_end_dt
          else cpb.sys_mod_dtime::date + cpb.prm_std_dd
          end) as prm_end_dt
        from
          cc_prm_base cpb
          inner join cc_prm_aply_tgt cpat
          on cpb.prm_no = cpat.prm_no
          inner join cc_cpn_issue cci
          on cpb.prm_no = cci.prm_no
          and cci.mbr_no = #{mbrNo}
          inner join cc_cpn_base ccb
          on ccb.prm_no = cpb.prm_no
          inner join pr_goods_base pgb
          on cpat.aply_tgt_no = pgb.goods_no
          inner join pr_item_info pii
          on pii.goods_no = pgb.goods_no
        where
          cpb.use_yn = 'Y'
          and cci.cpn_use_dt is null
          and cpb.prm_kind_cd = '20'
          and ccb.cpn_kind_cd = '10'
          and aply_tgt_no in
          <foreach collection="products" item="item" open="(" close=")" separator=",">
            #{item.goodsNo}
          </foreach>
        order by aply_tgt_no, item_no, cpb.prm_no, cci.cpn_iss_no
      ) t
      where now() between t.prm_strt_dt::date and t.prm_end_dt::date + 1
    </select>

  <resultMap id="cartCouponMap" type="com.plateer.ec1.promotion.vo.CouponProductsVo">
    <id column="prm_no"/>
    <id column="cpn_iss_no"/>
    <association property="promotion" autoMapping="true"/>
    <collection property="productList" ofType="com.plateer.ec1.promotion.vo.ProductVo" autoMapping="true"/>
  </resultMap>

  <!-- 상품에 적용 가능한 쿠폰 목록 -->
    <select id="selectAvailableCartPromotionList" resultMap="cartCouponMap" parameterType="com.plateer.ec1.promotion.vo.CouponProductsVo">
      select
        t.prm_no
        , t.prm_nm
        , t.dc_val
        , t.min_pur_amt
        , t.max_dc_amt
        , t.dc_ccd
        , t.cpn_kind_cd
        , t.cpn_iss_no
        , t.goods_no
        , t.item_no
        , t.prd_price
      from
        (select
          /* PromotionMapper.selectAvailablePromtionList */
          cpb.prm_no
          , cpb.prm_nm
          , cpb.dc_val
          , cpb.min_pur_amt
          , cpb.max_dc_amt
          , cpb.dc_ccd
          , ccb.cpn_kind_cd
          , cci.cpn_iss_no
          , pgb.goods_no
          , pii.item_no
          , COALESCE(pgb.prm_prc, pgb.sale_prc) as prd_price
          , (case when cpb.prm_priod_ccd = '10' then cpb.prm_strt_dt
          else cpb.sys_mod_dtime
          end) as prm_strt_dt
          , (case when cpb.prm_priod_ccd = '10' then cpb.prm_end_dt
          else cpb.sys_mod_dtime::date + cpb.prm_std_dd
          end) as prm_end_dt
        from
          cc_prm_base cpb
          inner join cc_prm_aply_tgt cpat
          on cpb.prm_no = cpat.prm_no
          inner join cc_cpn_issue cci
          on cpb.prm_no = cci.prm_no
          and cci.mbr_no = #{mbrNo}
          inner join cc_cpn_base ccb
          on ccb.prm_no = cpb.prm_no
          inner join pr_goods_base pgb
          on cpat.aply_tgt_no = pgb.goods_no
          inner join pr_item_info pii
          on pii.goods_no = pgb.goods_no
        where
          cpb.use_yn = 'Y'
          and cci.cpn_use_dt is null
          and cpb.prm_kind_cd = '20'
          and ccb.cpn_kind_cd = '30'
          and aply_tgt_no in
          <foreach collection="products" item="item" open="(" close=")" separator=",">
            #{item.goodsNo}
          </foreach>
        order by aply_tgt_no, item_no, cpb.prm_no, cci.cpn_iss_no
      ) t
      where now() between t.prm_strt_dt::date and t.prm_end_dt::date + 1
    </select>

    <select id="selectPrePoint" parameterType="string" resultType="com.plateer.ec1.common.model.promotion.CcMbrPntModel">
      select
        /* PromotionMapper.selectPrePoint */
        cmp.pnt_hst_seq
        , cmp.mbr_no
        , cmp.pnt_hst_seq
        , mbr_no, sv_use_ccd
        , sv_use_amt
        , pnt_blc
        , ord_no
        , pay_no
        , sys_reg_dtime
        , sys_regr_id
        , sys_mod_dtime
        , sys_modr_id
      from
        cc_mbr_pnt cmp
      where
        cmp.mbr_no = #{mbrNo}
      order by cmp.pnt_hst_seq desc
      limit 1
    </select>
</mapper>